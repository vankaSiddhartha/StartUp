// Generated by view binder compiler. Do not edit!
package com.vanka.skillstar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.vanka.skillstar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUploadPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAddImage;

  @NonNull
  public final ImageButton buttonBack;

  @NonNull
  public final AppCompatButton buttonPost;

  @NonNull
  public final TextInputEditText editTextCaption;

  @NonNull
  public final ImageView imageViewPreview;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final Toolbar toolbar;

  private ActivityUploadPostBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonAddImage, @NonNull ImageButton buttonBack,
      @NonNull AppCompatButton buttonPost, @NonNull TextInputEditText editTextCaption,
      @NonNull ImageView imageViewPreview, @NonNull LinearLayout linearLayout2,
      @NonNull TextInputLayout textInputLayout, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonAddImage = buttonAddImage;
    this.buttonBack = buttonBack;
    this.buttonPost = buttonPost;
    this.editTextCaption = editTextCaption;
    this.imageViewPreview = imageViewPreview;
    this.linearLayout2 = linearLayout2;
    this.textInputLayout = textInputLayout;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUploadPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUploadPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upload_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUploadPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddImage;
      Button buttonAddImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddImage == null) {
        break missingId;
      }

      id = R.id.buttonBack;
      ImageButton buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.buttonPost;
      AppCompatButton buttonPost = ViewBindings.findChildViewById(rootView, id);
      if (buttonPost == null) {
        break missingId;
      }

      id = R.id.editTextCaption;
      TextInputEditText editTextCaption = ViewBindings.findChildViewById(rootView, id);
      if (editTextCaption == null) {
        break missingId;
      }

      id = R.id.imageViewPreview;
      ImageView imageViewPreview = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPreview == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityUploadPostBinding((ConstraintLayout) rootView, buttonAddImage, buttonBack,
          buttonPost, editTextCaption, imageViewPreview, linearLayout2, textInputLayout, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
